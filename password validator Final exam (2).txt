/* 
Tofik Mussa
Submitted to: Dr. Belcher
This assignment deals with exceptions and
proper use of the different methods in 
the string class
*/
#include <iostream>
#include <string>
#include <stdio.h>
#include <string.h>
#include <ctime>
using namespace std;

class GeneralPWError
{
public:
    string theProblem;
    string pwTried;
    time_t timeTried;
    
    GeneralPWError(const char * prob = "Default problem") : theProblem(prob) {}
    string what() { return theProblem;}
    
};

void checkPassword(const char * pW) {
    
    int passwordLength = strlen(pW);
    
    if(passwordLength < 10 || passwordLength >16) { //throws error of type int for inappropriate length
        throw -1; }
    
    int numOfUpper = 0, numOfLower = 0, digitCounter = 0;
    
    for(int i = 0; i < passwordLength; i++) {
        
        if(isupper(pW[i])) { //counts the number of uppercase characters
            numOfUpper += 1;
        } else if(islower(pW[i])) { //counts the number of lowercase characters
            numOfLower += 1;
        } else if(isspace(pW[i])) { //checks for space
            throw  GeneralPWError("Error: Password can not contain space");
        } else if(isdigit(pW[i])) {
            digitCounter += 1;  //counts the number of digits
            if(pW[i] == pW[i+1] + 1 || pW[i] == pW[i+1] - 1) { //checks for consecutive digits
                throw GeneralPWError("Error: Password can not contain two consecutive digits " ); }
        }
    }
    
    if(numOfUpper < 1 || numOfLower < 1) {  //throws error for insufficient number of uppercase and lowercase letters
        throw GeneralPWError("Error: Password must contain atleast 1 uppercase and atleast 1 lowercase letter "); }
    if(digitCounter < 2) { //throws error for insufficient number of digits
        throw GeneralPWError("Error: Password must contain atleast two digits");}
        
    cout << "Password valid " << "\n";
}

int main()
{
 
  string passWord;
  int numOfTimes;
  GeneralPWError myError;
  
  cout << "Please enter password " << "\n";
  
  while( numOfTimes < 5) { //loops 5 times if not terminated by ...
      
  getline(cin, passWord);
  
  if(passWord == "...") { //terminates the program
  return 0;
  }
  
  myError.pwTried = passWord;
  tm * timeStruct;
  myError.timeTried= time(NULL); //gets the time user entered password
  timeStruct = localtime(&myError.timeTried);
  
  try{
    checkPassword(passWord.c_str());
  }
  
  catch(int e) { cout << "Error: Password must be atleast 10 characters long and atmost 16" << "\n"; }
  catch(GeneralPWError & ee) { cout <<  myError.pwTried << " tried at " << timeStruct->tm_hour<<":"<< 
  timeStruct->tm_min <<":" << timeStruct->tm_sec;
  
  if(timeStruct->tm_hour >= 12) {
      cout << "PM" << ", ";
  } else {
      cout << "AM" << ",";
  }
  
  cout << ee.what() << "\n"; }
  numOfTimes++;
  }
  
  cout << "Too many attempts " << "\n";
  
}
